version: '2'
services:
  proxy:
    build: proxy
    container_name: proxy
    ports:
      - "80:80"

  hello:
    build: hello
    container_name: hello

  api-rs:
    build: api-rs
    container_name: api-rs
    volumes:
      - ./api-rs/app:/srv

  api-data:
    build: api-data
    container_name: api-data
    volumes:
      - ./api-data/app:/srv

#  api-ds:
#    build: api-ds

  ui:
    build: ui
    container_name: ui
    volumes:
      - ./ui/src:/srv/src

  init:
    build: init
    container_name: init
    depends_on:
      - cassandra
#      - hdfs-dn-1
    volumes:
      - ./init/app:/srv

  cassandra:
    image: cassandra
    container_name: cassandra
    volumes:
      - ./volumes/cassandra:/var/lib/cassandra

  hdfs-nn:
    image: itrust/hdfs:2.7.1
    hostname: hdfs-nn
    container_name: hdfs-nn
    command: /run-namenode.sh
    volumes:
      - ./volumes/hdfs/namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-nn:8020
      - CORE_CONF_hadoop_http_staticuser_user=root
      - CORE_CONF_hadoop_proxyuser_hue_hosts=*
      - CORE_CONF_hadoop_proxyuser_hue_groups=*
      - HDFS_CONF_dfs_webhdfs_enabled=true
      - HDFS_CONF_dfs_permissions_enabled=false
    ports:
      - 50070:50070

  hdfs-dn-1:
    image: itrust/hdfs:2.7.1
    hostname: hdfs-dn-1
    container_name: hdfs-dn-1
    links:
        - hdfs-nn
    command: /run-datanode.sh
    volumes:
      - ./volumes/hdfs/datanode1:/hadoop/dfs/data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-nn:8020
      - CORE_CONF_hadoop_http_staticuser_user=root
      - CORE_CONF_hadoop_proxyuser_hue_hosts=*
      - CORE_CONF_hadoop_proxyuser_hue_groups=*
      - HDFS_CONF_dfs_webhdfs_enabled=true
      - HDFS_CONF_dfs_permissions_enabled=false
